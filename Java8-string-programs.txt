package com.example.java8;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;


public class Java8StringPrograms {

	public static void main(String[] args) {
		String input = "Ilovejavaverymuch";

		// 1. Program to get the number of occurance of each character in a string
		Map<String, Long> countofStings = Arrays.stream(input.split(""))
				.collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));

		System.out.println(countofStings);

		// 2.Program to get the duplicate occurance of each character in a string
		List<String> duplicateElements = Arrays.stream(input.split(""))
				.collect(Collectors.groupingBy(Function.identity(), Collectors.counting())).entrySet().stream()
				.filter(m -> m.getValue() > 1).map(m -> m.getKey()).collect(Collectors.toList());

		System.out.println(duplicateElements);

		// 3.Program to get the unique occurance of each character in a string
		List<String> uniqueElements = Arrays.stream(input.split(""))
				.collect(Collectors.groupingBy(Function.identity(), Collectors.counting())).entrySet().stream()
				.filter(m -> m.getValue() == 1).map(Map.Entry::getKey).collect(Collectors.toList());

		System.out.println(uniqueElements);

		// 4.program to find the first non -repeated element or character in the given
		// string
		String nonRepeatedChar = Arrays.stream(input.split(""))
				.collect(Collectors.groupingBy(Function.identity(), LinkedHashMap::new, Collectors.counting()))
				.entrySet().stream().filter(m -> m.getValue() == 1).map(Map.Entry::getKey).findFirst().get();

		System.out.println(nonRepeatedChar);

		// 5.program to find the first repeated element or character in the given string
		String repeatedChar = Arrays.stream(input.split(""))
				.collect(Collectors.groupingBy(Function.identity(), LinkedHashMap::new, Collectors.counting()))
				.entrySet().stream().filter(m -> m.getValue() > 1).map(Map.Entry::getKey).findFirst().get();

		System.out.println(repeatedChar);

		// 6. Program to find the count of Vowels in the given string

		String inputVowels = "hello hello";

		long countofVowels = inputVowels.chars().filter(ch -> ('a' == ch || 'e' == ch || 'i' == ch || 'o' == ch
				|| 'u' == ch || 'A' == ch || 'E' == ch || 'I' == ch || 'O' == ch || 'U' == ch)).count();

		System.out.println(countofVowels);

		/*
		 * //Another way to get the count of vowels //Map<String, Long> countOfVowels =
		 */
		
		// 7. Program to get the number of occurance of vowel in a string
		Map<String, Long> countOfVowels = Arrays.stream(input.split("")).map(s -> s.toLowerCase())
		                                            .filter(s -> s.equals("a") || s.equals("e") || s.equals("i") || s.equals("o") || s.equals("u"))
		                                            .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));
		 
		System.out.println(countOfVowels);
		
		// 8. Program to get the number of occurance of consonant in a string
				Map<String, Long> countOfConsonants = Arrays.stream(input.split("")).map(s -> s.toLowerCase())
				                                            .filter(s -> ! (s.equals("a") || s.equals("e") || s.equals("i") || s.equals("o") || s.equals("u")))
				                                            .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));
				 
				System.out.println(countOfConsonants);
	}

}
